[{"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\index.js":"1","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\App.js":"2","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reportWebVitals.js":"3","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Protected.js":"4","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Login.js":"5","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\home\\Home.js":"6","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\SideBar.js":"7","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Profile.js":"8","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\Konstants.js":"9","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\Services.js":"10","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\Staff.js":"11","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\Rooms.js":"12","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\index.js":"13","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\Reservations.js":"14"},{"size":925,"mtime":1607635212672,"results":"15","hashOfConfig":"16"},{"size":445,"mtime":1607632973560,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":576,"mtime":1607620681688,"results":"19","hashOfConfig":"16"},{"size":2270,"mtime":1607636127453,"results":"20","hashOfConfig":"16"},{"size":3976,"mtime":1607689189777,"results":"21","hashOfConfig":"16"},{"size":6648,"mtime":1607644935355,"results":"22","hashOfConfig":"16"},{"size":5810,"mtime":1607705870273,"results":"23","hashOfConfig":"16"},{"size":811,"mtime":1607633680677,"results":"24","hashOfConfig":"16"},{"size":2135,"mtime":1607688571830,"results":"25","hashOfConfig":"16"},{"size":2148,"mtime":1607687596680,"results":"26","hashOfConfig":"16"},{"size":2245,"mtime":1607689052274,"results":"27","hashOfConfig":"16"},{"size":124,"mtime":1607632910356,"results":"28","hashOfConfig":"16"},{"size":2065,"mtime":1607689200245,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1dvlopt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\index.js",[],["62","63"],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\App.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reportWebVitals.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Protected.js",["64"],"import React from 'react'\r\nimport SideBar from './SideBar'\r\nimport {Route, Redirect} from 'react-router-dom'\r\n\r\n\r\nconst Protected = (props) => {\r\n    return (\r\n      <Route\r\n        render={props => {\r\n          if (2===2) {\r\n            return(\r\n              <SideBar {...props} />\r\n            )\r\n            \r\n          }\r\n          return(\r\n            <Redirect to={\r\n              {\r\n                  pathname:'/login',\r\n                  state:props.location\r\n              }\r\n          } />\r\n          )\r\n        }}\r\n      />\r\n    );\r\n  };\r\nexport default  Protected","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Login.js",["65","66","67"],"import React, { Component } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport '../../css/login.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n      token: \"\",\r\n    };\r\n  }\r\n\r\n  handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const { password, email } = this.state;\r\n    if (!password || !email)\r\n      return this.setState({\r\n        error: \"Email and/ or password field can not be empty\",\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { password, email, error } = this.state;\r\n    return (\r\n      <div id=\"login-container\">\r\n        <div id=\"login-form-container\" className=\"z-depth-float card-me\">\r\n          <center>\r\n            {\" \"}\r\n            <p id=\"login-text\">ADMIN LOGIN</p>\r\n          </center>\r\n          <Form id=\"form\" onSubmit={this.handleLogin}>\r\n            {error ? <p id=\"error-text\">{error}</p> : null}\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <center>\r\n            <Button block size=\"lg\" type=\"submit\" className=\"button login-btn\">\r\n              Login\r\n            </Button>\r\n            </center>\r\n\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return bindActionCreators(\r\n//     {\r\n//       saveUserData: saveUserInfoInStateAction,\r\n//     },\r\n//     dispatch\r\n//   );\r\n// };\r\nexport default withRouter(Login);\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\home\\Home.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\SideBar.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Profile.js",["68","69"],"import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport \"../../css/profile.css\";\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editMode: false,\r\n      fname: \"\",\r\n      lname: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { fname, lname, phone, email, username } = this.state;\r\n    return (\r\n      <div id=\"profile-container\">\r\n        <Paper elevation={3} id=\"user-info-container\">\r\n          <div id=\"profile-header\">\r\n            <h3>User Information</h3>\r\n            <div className=\"center-me edit-mode-btn\">\r\n              {!this.state.editMode ? (\r\n                <EditIcon id=\"edit-mode-icon\" onClick={()=>this.setState({editMode:true})} />\r\n              ) : (\r\n                <ClearIcon id=\"edit-mode-icon\" onClick={()=>this.setState({editMode:false})} />\r\n              )}\r\n            </div>\r\n          </div>\r\n          {this.state.editMode ? (\r\n            <Form id=\"form\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      autoFocus\r\n                      type=\"text\"\r\n                      value={fname}\r\n                      onChange={(e) => this.setState({ fname: e.target.value })}\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Last Name\"\r\n                      autoFocus\r\n                      type=\"text\"\r\n                      value={lname}\r\n                      onChange={(e) => this.setState({ lname: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                      autoFocus\r\n                      type=\"text\"\r\n                      value={username}\r\n                      onChange={(e) =>\r\n                        this.setState({ username: e.target.value })\r\n                      }\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Email\"\r\n                      autoFocus\r\n                      type=\"Email\"\r\n                      value={lname}\r\n                      onChange={(e) => this.setState({ email: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"phone number\" />\r\n              </Form.Group>\r\n              <center style={{ marginTop: \"1.2rem\" }}>\r\n                {\" \"}\r\n                <Button variant=\"primary\" type=\"submit\" className=\"button\">\r\n                  Save info\r\n                </Button>\r\n              </center>\r\n            </Form>\r\n          ) : (\r\n            <div>\r\n              <div id=\"info-item\">\r\n                <span>Full Name</span>\r\n                <p>Abdullai Tahiru</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Username</span>\r\n                <p>Tachyon</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Email</span>\r\n                <p>abdullai.tahiru@gmial.com</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Staf ID</span>\r\n                <p>20511728</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Phone</span>\r\n                <p>+233501654928</p>\r\n                <Divider />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Paper>\r\n\r\n        <Paper elevation={3} id=\"password-change-container\">\r\n          <center id=\"profile-header\">\r\n            <h3>Change Password</h3>\r\n          </center>\r\n          <Form id=\"form\">\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Old Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"Enter Old password\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control type=\"password\" placeholder=\"New Password\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Confirm New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm New Password\"\r\n              />\r\n            </Form.Group>\r\n            <center style={{ marginTop: \"1.2rem\" }}>\r\n              {\" \"}\r\n              <Button variant=\"primary\" type=\"submit\" className=\"button\">\r\n                Change Password\r\n              </Button>\r\n            </center>\r\n          </Form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\Konstants.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\Services.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\Staff.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\Rooms.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\index.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\Reservations.js",["70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":10,"column":15,"nodeType":"77","messageId":"78","endLine":10,"endColumn":20},{"ruleId":"79","severity":1,"message":"80","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":28},{"ruleId":"79","severity":1,"message":"84","line":6,"column":10,"nodeType":"81","messageId":"82","endLine":6,"endColumn":17},{"ruleId":"79","severity":1,"message":"85","line":22,"column":27,"nodeType":"81","messageId":"82","endLine":22,"endColumn":32},{"ruleId":"79","severity":1,"message":"86","line":22,"column":34,"nodeType":"81","messageId":"82","endLine":22,"endColumn":39},{"ruleId":"79","severity":1,"message":"87","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":16},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'bindActionCreators' is defined but never used.","'connect' is defined but never used.","'phone' is assigned a value but never used.","'email' is assigned a value but never used.","'EditIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]