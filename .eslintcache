[{"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\index.js":"1","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\App.js":"2","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reportWebVitals.js":"3","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Protected.js":"4","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Login.js":"5","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\home\\Home.js":"6","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\SideBar.js":"7","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Profile.js":"8","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\Konstants.js":"9","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\Services.js":"10","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\Staff.js":"11","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\Rooms.js":"12","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\index.js":"13","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\Reservations.js":"14","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\HelperFunctions.js":"15","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\firebase\\index.js":"16","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\RoomForm.js":"17","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\ServiceForm.js":"18","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\StaffForm.js":"19","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\IneractionFunctions.js":"20","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\Reducers.js":"21","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\actions\\index.js":"22","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Messaging\\Messaging.js":"23"},{"size":925,"mtime":1607727600635,"results":"24","hashOfConfig":"25"},{"size":1262,"mtime":1607768232551,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":707,"mtime":1607777669831,"results":"28","hashOfConfig":"25"},{"size":2763,"mtime":1607730613245,"results":"29","hashOfConfig":"25"},{"size":6368,"mtime":1607996101526,"results":"30","hashOfConfig":"25"},{"size":7070,"mtime":1607885571795,"results":"31","hashOfConfig":"25"},{"size":8534,"mtime":1607899773333,"results":"32","hashOfConfig":"25"},{"size":2471,"mtime":1607995882067,"results":"33","hashOfConfig":"25"},{"size":6369,"mtime":1607884627353,"results":"34","hashOfConfig":"25"},{"size":5411,"mtime":1607997693383,"results":"35","hashOfConfig":"25"},{"size":7036,"mtime":1607885153035,"results":"36","hashOfConfig":"25"},{"size":280,"mtime":1607733892903,"results":"37","hashOfConfig":"25"},{"size":6472,"mtime":1607997771881,"results":"38","hashOfConfig":"25"},{"size":2,"mtime":1607866718197,"results":"39","hashOfConfig":"25"},{"size":568,"mtime":1607720302344,"results":"40","hashOfConfig":"25"},{"size":7784,"mtime":1607883383660,"results":"41","hashOfConfig":"25"},{"size":4424,"mtime":1607878087849,"results":"42","hashOfConfig":"25"},{"size":6172,"mtime":1607993813560,"results":"43","hashOfConfig":"25"},{"size":3928,"mtime":1607991103312,"results":"44","hashOfConfig":"25"},{"size":455,"mtime":1607733861238,"results":"45","hashOfConfig":"25"},{"size":514,"mtime":1607734160671,"results":"46","hashOfConfig":"25"},{"size":241,"mtime":1607885348600,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1dvlopt",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\index.js",[],["98","99"],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\App.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reportWebVitals.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Protected.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Login.js",["100"],"import React, { Component } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport '../../css/login.css'\r\nimport { Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { LoginUser } from \"../../machinery/functions/IneractionFunctions\";\r\nimport { saveUserInfoInStateAction } from \"../../machinery/actions\";\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      error: \"\",\r\n      token: \"\",\r\n    };\r\n  }\r\n\r\n  handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const { password, email } = this.state;\r\n    if (!password || !email)\r\n      return this.setState({\r\n        error: \"Email and/ or password field can not be empty\",\r\n      });\r\n      let user = await LoginUser({\r\n        email:email,\r\n        password:password\r\n      })\r\n      if (user.token){\r\n        localStorage.setItem(\"token\", user.token)\r\n        this.props.saveUserData({\r\n          token:user.token,\r\n          user:user.data,\r\n        })\r\n        this.props.history.push(\"/\")\r\n     \r\n      }\r\n      \r\n  };\r\n\r\n  render() {\r\n    const { password, email, error } = this.state;\r\n    return (\r\n      <div id=\"login-container\">\r\n        <div id=\"login-form-container\" className=\"z-depth-float card-me\">\r\n          <center>\r\n            {\" \"}\r\n            <p id=\"login-text\">ADMIN LOGIN</p>\r\n          </center>\r\n          <Form id=\"form\" onSubmit={this.handleLogin}>\r\n            {error ? <p id=\"error-text\">{error}</p> : null}\r\n            <Form.Group size=\"lg\" controlId=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => this.setState({ email: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group size=\"lg\" controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => this.setState({ password: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <center>\r\n            <Button block size=\"lg\" type=\"submit\" className=\"button login-btn\">\r\n              Login\r\n            </Button>\r\n            </center>\r\n\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      saveUserData: saveUserInfoInStateAction,\r\n    },\r\n    dispatch\r\n  );\r\n}; \r\nexport default connect(null, mapDispatchToProps)(withRouter(Login));\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\home\\Home.js",["101"],"import React, { Component } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FolderIcon from \"@material-ui/icons/Folder\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport EventSeatIcon from \"@material-ui/icons/EventSeat\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport MeetingRoomIcon from \"@material-ui/icons/MeetingRoom\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport \"../../css/Home.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getDashboardDataAction } from \"../../machinery/actions\";\r\nimport { deleteReservation } from \"../../machinery/functions/IneractionFunctions\";\r\nimport TextsmsIcon from \"@material-ui/icons/Textsms\";\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dashboard:{}\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps({ dashboard }) {\r\n    this.setState({ dashboard: dashboard});\r\n  }\r\n  componentDidMount(){\r\n    let dashboard = this.props.dashboard\r\n     this.setState({dashboard:dashboard})     \r\n   }\r\n\r\n   deleteUserReservation = async (item) => {\r\n    let { bills } = this.state.dashboard;\r\n    let filtered = bills.filter((x) => x.id !== item.id);\r\n    let newDash = { ...this.state.dashboard };\r\n    newDash.bills = filtered;\r\n    this.setState({ dashboard: newDash });\r\n\r\n    let res = await deleteReservation(this.props.token, item.reservation.id);\r\n    if (res.success) {\r\n      this.props.saveDashboardData();\r\n    }\r\n  };\r\n  recentReservations = () => {\r\n    const { bills } = this.state.dashboard;\r\n    return (\r\n      <Paper elevation={3} id=\"surface\">\r\n        <div id=\"booking-table-header\">\r\n          <h3>Recent Reservations</h3>\r\n          <div>\r\n            <RefreshIcon style={{ color: \"grey\" }} />\r\n          </div>\r\n        </div>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Guest</th>\r\n              <th>Phone</th>\r\n              <th>Check In</th>\r\n              <th>Check Out</th>\r\n              <th>Status</th>\r\n              <th>Booking ID</th>\r\n              <th>Room Type</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {bills && bills.length\r\n              ? bills.map((bill, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index+1}</td>\r\n                      <td>{bill.reservation.guest.fname}</td>\r\n                      <td>{bill.reservation.guest.phone}</td>\r\n                      <td>{bill.reservation.check_in_date}</td>\r\n                      <td>{bill.reservation.check_out_date}</td>\r\n                      <td>{bill.is_paid ? \"PAID\" :\"PENDING\"}</td>\r\n                      <td>{bill.reservation.booking_code}</td>\r\n                      <td>{bill.reservation.room.type}</td>\r\n                      <td style={{ display: \"flex\" }}>\r\n                      <div id=\"action\" className=\"center-me edit\">\r\n                          <TextsmsIcon\r\n                            id=\"action-icon\"\r\n                            // onClick={() => this.editRoom(room)}\r\n                          />\r\n                        </div>\r\n                        <div id=\"action\" className=\"center-me delete\" onClick={()=>this.deleteUserReservation(bill)}>\r\n                          <DeleteIcon id=\"action-icon\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  };\r\n  render() {\r\n    const { dashboard } = this.state;\r\n    return (\r\n      <div>\r\n        <div id=\"figures-main-container\">\r\n          <div\r\n            id=\"figure-container\"\r\n            className=\"z-depth-2 card-me\"\r\n            style={{ backgroundColor: \"#3598dc\" }}\r\n          >\r\n            <Avatar id=\"avatar\" style={{ backgroundColor: \"#2874A6\" }}>\r\n              <EventSeatIcon style={{ fontSize: 40, color: \"white\" }} />\r\n            </Avatar>\r\n            <div id=\"figures-details\">\r\n              <span>Reservations</span>\r\n              <span>{dashboard.reservation_count}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"figure-container\"\r\n            className=\"z-depth-2 card-me\"\r\n            style={{ backgroundColor: \"#E67D21\" }}\r\n          >\r\n            <Avatar id=\"avatar\" style={{ backgroundColor: \"#D35400\" }}>\r\n              <PeopleIcon style={{ fontSize: 40, color: \"white\" }} />\r\n            </Avatar>\r\n            <div id=\"figures-details\">\r\n              <span>Guests</span>\r\n              <span>{dashboard.guests_count}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"figure-container\"\r\n            className=\"z-depth-2 card-me\"\r\n            style={{ backgroundColor: \"#8E44AD\" }}\r\n          >\r\n            <Avatar id=\"avatar\" style={{ backgroundColor: \"#7D3C98\" }}>\r\n              <MeetingRoomIcon style={{ fontSize: 40, color: \"white\" }} />\r\n            </Avatar>\r\n            <div id=\"figures-details\">\r\n              <span>Rooms</span>\r\n              <span>{dashboard.room_count}</span>\r\n            </div>\r\n          </div>\r\n          <div\r\n            id=\"figure-container\"\r\n            className=\"z-depth-2 card-me\"\r\n            style={{ backgroundColor: \"#28a745\" }}\r\n          >\r\n            <Avatar id=\"avatar\" style={{ backgroundColor: \"#1E8449\" }}>\r\n              <AccountBalanceWalletIcon style={{ fontSize: 40, color: \"white\" }} />\r\n            </Avatar>\r\n            <div id=\"figures-details\">\r\n              <span>Earnings</span>\r\n              <span>{dashboard.earnings}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.recentReservations()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dashboard: state.dashboard,\r\n    token: state.user.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      saveDashboardData: getDashboardDataAction,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\SideBar.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Profile.js",["102","103"],"import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport \"../../css/profile.css\";\r\nimport { saveUserInfoInStateAction } from \"../../machinery/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  changePassword,\r\n  updateUserProfile,\r\n  getUserProfileData,\r\n} from \"../../machinery/functions/IneractionFunctions\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { Toast } from \"react-bootstrap\";\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editMode: false,\r\n      fname: \"\",\r\n      lname: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      username: \"\",\r\n      password1: \"\",\r\n      password2: \"\",\r\n      oldPassword: \"\",\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  changeMyPassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { password1, password2 } = this.state;\r\n    if (!password1 || !password2 || password1 !== password2)\r\n      return this.setState({ info: \"please Check the passwords\" });\r\n    this.setState({ loading: true, info: \"\" });\r\n\r\n    let res = await changePassword(this.props.user.token, {\r\n      new_password1: password1,\r\n      new_password2: password2,\r\n    });\r\n    if (res.success) {\r\n      this.setState({ info: \"password successfully changed\", loading: false, openToast:true });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (e) => {\r\n    e.preventDefault();\r\n    let res = await updateUserProfile(this.props.user.token, {\r\n      fname: this.state.fname,\r\n      lname: this.state.lname,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n    });\r\n    if (res.data) {\r\n      let data = await getUserProfileData(this.props.user.token);\r\n      if (data) {\r\n        this.props.saveUserData({\r\n          user: data.data[0],\r\n          token: this.props.user.token,\r\n        });\r\n        this.setState({ editMode: false });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { fname, lname, phone, email } = this.state;\r\n    const { user } = this.props.user;\r\n    return (\r\n      <div id=\"profile-container\">\r\n        <Paper elevation={3} id=\"user-info-container\">\r\n          <div id=\"profile-header\">\r\n            <h3>User Information</h3>\r\n            <div className=\"center-me edit-mode-btn\">\r\n              {!this.state.editMode ? (\r\n                <EditIcon\r\n                  id=\"edit-mode-icon\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      fname: user.fname,\r\n                      lname: user.lname,\r\n                      email: user.email,\r\n                      phone: user.phone,\r\n                      editMode: true,\r\n                    })\r\n                  }\r\n                />\r\n              ) : (\r\n                <ClearIcon\r\n                  id=\"edit-mode-icon\"\r\n                  onClick={() => this.setState({ editMode: false })}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n          {this.state.editMode ? (\r\n            <Form id=\"form\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>First Name</Form.Label>\r\n                    <Form.Control\r\n                      autoFocus\r\n                      type=\"text\"\r\n                      value={fname}\r\n                      onChange={(e) => this.setState({ fname: e.target.value })}\r\n                      placeholder=\"First Name\"\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label>Last Name</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Last Name\"\r\n                      autoFocus\r\n                      type=\"text\"\r\n                      value={lname}\r\n                      onChange={(e) => this.setState({ lname: e.target.value })}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group>\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  placeholder=\"Email\"\r\n                  autoFocus\r\n                  type=\"Email\"\r\n                  value={email}\r\n                  onChange={(e) => this.setState({ email: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formBasicPassword\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"phone number\"\r\n                  value={phone}\r\n                  onChange={(e) => this.setState({ phone: e.target.value })}\r\n                />\r\n              </Form.Group>\r\n              <center style={{ marginTop: \"1.2rem\" }}>\r\n                {\" \"}\r\n                <Button\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"button\"\r\n                  onClick={this.updateProfile}\r\n                >\r\n                  Save info\r\n                </Button>\r\n              </center>\r\n            </Form>\r\n          ) : (\r\n            <div>\r\n              <div id=\"info-item\">\r\n                <span>Full Name</span>\r\n                <p>{user ? user.fname : \"\" + \" \" + user ? user.lname : \"\"}</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Email</span>\r\n                <p>{user ? user.email : \"\"}</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Staf ID</span>\r\n                <p>{user ? user.idNumber : \"\"}</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Phone</span>\r\n                <p>{user ? user.phone : \"\"}</p>\r\n                <Divider />\r\n              </div>\r\n              <div id=\"info-item\">\r\n                <span>Address</span>\r\n                <p>{user ? user.homeAddress : \"\"}</p>\r\n                <Divider />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Paper>\r\n\r\n        <Paper elevation={3} id=\"password-change-container\">\r\n          <center id=\"profile-header\">\r\n            <h3>Change Password</h3>\r\n          </center>\r\n          <Form id=\"form\">\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Old Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Enter Old password\"\r\n                value={this.state.oldPassword}\r\n                onChange={(e) => this.setState({ oldPassword: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"New Password\"\r\n                value={this.state.password1}\r\n                onChange={(e) => this.setState({ password1: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Confirm New Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Confirm New Password\"\r\n                value={this.state.password2}\r\n                onChange={(e) => this.setState({ password2: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <center style={{ marginTop: \"1.2rem\" }}>\r\n              {\" \"}\r\n              <Button\r\n                variant=\"primary\"\r\n                type=\"submit\"\r\n                className=\"button\"\r\n                onClick={this.changeMyPassword}\r\n              >\r\n                Change Password\r\n              </Button>\r\n            </center>\r\n            {this.state.loading ? <LinearProgress color=\"secondary\" /> : null}\r\n          </Form>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      saveUserData: saveUserInfoInStateAction,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\Konstants.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\Services.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\Staff.js",["104","105","106"],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\Rooms.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\index.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\Reservations.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\HelperFunctions.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\firebase\\index.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\RoomForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\ServiceForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\StaffForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\IneractionFunctions.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\Reducers.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\actions\\index.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Messaging\\Messaging.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":14},{"ruleId":"111","severity":1,"message":"115","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":18},{"ruleId":"111","severity":1,"message":"116","line":17,"column":10,"nodeType":"113","messageId":"114","endLine":17,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":165,"column":44,"nodeType":"119","messageId":"120","endLine":165,"endColumn":45},{"ruleId":"117","severity":1,"message":"118","line":101,"column":49,"nodeType":"119","messageId":"120","endLine":101,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":121,"column":49,"nodeType":"119","messageId":"120","endLine":121,"endColumn":50},{"ruleId":"121","severity":1,"message":"122","line":141,"column":11,"nodeType":"123","endLine":141,"endColumn":39},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'FolderIcon' is defined but never used.","'Toast' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]