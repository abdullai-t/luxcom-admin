[{"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\index.js":"1","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\App.js":"2","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reportWebVitals.js":"3","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Protected.js":"4","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Login.js":"5","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\home\\Home.js":"6","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\SideBar.js":"7","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Profile.js":"8","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\Konstants.js":"9","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\Services.js":"10","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\Staff.js":"11","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\Rooms.js":"12","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\index.js":"13","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\Reservations.js":"14","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\HelperFunctions.js":"15","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\firebase\\index.js":"16","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\RoomForm.js":"17","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\ServiceForm.js":"18","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\StaffForm.js":"19","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\IneractionFunctions.js":"20","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\Reducers.js":"21","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\actions\\index.js":"22","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Messaging\\Messaging.js":"23","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\MessagingForm.js":"24","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\ConfirmationModal.js":"25","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\news\\News.js":"26","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\news\\NewsForm.js":"27","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\finances\\Finances.js":"28","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\ReservationForm.js":"29","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Notification.js":"30","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Accounting\\Dashboard.js":"31","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Accounting\\charts\\NumberOfMontlyBooking.js":"32","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Accounting\\charts\\PaidVsUnpaid.js":"33"},{"size":925,"mtime":1607727600635,"results":"34","hashOfConfig":"35"},{"size":1262,"mtime":1607768232551,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":707,"mtime":1609428837843,"results":"38","hashOfConfig":"35"},{"size":3285,"mtime":1608423658442,"results":"39","hashOfConfig":"35"},{"size":8611,"mtime":1611228941285,"results":"40","hashOfConfig":"35"},{"size":8348,"mtime":1611087144845,"results":"41","hashOfConfig":"35"},{"size":8957,"mtime":1609436161306,"results":"42","hashOfConfig":"35"},{"size":3345,"mtime":1611072324092,"results":"43","hashOfConfig":"35"},{"size":7284,"mtime":1610029681354,"results":"44","hashOfConfig":"35"},{"size":8899,"mtime":1610029897918,"results":"45","hashOfConfig":"35"},{"size":7940,"mtime":1610029726371,"results":"46","hashOfConfig":"35"},{"size":280,"mtime":1607733892903,"results":"47","hashOfConfig":"35"},{"size":10157,"mtime":1610467718921,"results":"48","hashOfConfig":"35"},{"size":2,"mtime":1607866718197,"results":"49","hashOfConfig":"35"},{"size":568,"mtime":1607720302344,"results":"50","hashOfConfig":"35"},{"size":7789,"mtime":1609503210093,"results":"51","hashOfConfig":"35"},{"size":4431,"mtime":1609427296407,"results":"52","hashOfConfig":"35"},{"size":8574,"mtime":1609416342413,"results":"53","hashOfConfig":"35"},{"size":7075,"mtime":1610356395904,"results":"54","hashOfConfig":"35"},{"size":455,"mtime":1607733861238,"results":"55","hashOfConfig":"35"},{"size":514,"mtime":1607734160671,"results":"56","hashOfConfig":"35"},{"size":9744,"mtime":1610029764000,"results":"57","hashOfConfig":"35"},{"size":3291,"mtime":1609435147260,"results":"58","hashOfConfig":"35"},{"size":794,"mtime":1609436073178,"results":"59","hashOfConfig":"35"},{"size":7443,"mtime":1610029739496,"results":"60","hashOfConfig":"35"},{"size":5913,"mtime":1608768136178,"results":"61","hashOfConfig":"35"},{"size":212,"mtime":1609370103199,"results":"62","hashOfConfig":"35"},{"size":8168,"mtime":1610499657541,"results":"63","hashOfConfig":"35"},{"size":637,"mtime":1610362616194,"results":"64","hashOfConfig":"35"},{"size":4133,"mtime":1611169917418,"results":"65","hashOfConfig":"35"},{"size":1839,"mtime":1611192213656,"results":"66","hashOfConfig":"35"},{"size":1317,"mtime":1611192113958,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1dvlopt",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\index.js",[],["140","141"],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\App.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reportWebVitals.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Protected.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Login.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\home\\Home.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\SideBar.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\auth\\Profile.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\Konstants.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\Services.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\Staff.js",["142"],"import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Table, FormControl } from \"react-bootstrap\";\r\nimport StaffForm from \"./StaffForm\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getDashboardDataAction } from \"../../machinery/actions\";\r\nimport { deleteStaff , deleteUser} from \"../../machinery/functions/IneractionFunctions\";\r\nclass Staff extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddStaff: false,\r\n      staff: [],\r\n      filtered: [],\r\n      query: \"\",\r\n      addAccountant: false,\r\n      admins: [],\r\n    };\r\n  }\r\n  handleShow = () => {\r\n    this.setState({ showAddStaff: false });\r\n  };\r\n  componentWillReceiveProps({ staff, admins }) {\r\n    this.setState({ staff: staff, admins });\r\n  }\r\n  componentDidMount() {\r\n    let staff = this.props.staff;\r\n    let admins = this.props.admins;\r\n    this.setState({ staff: staff, admins: admins });\r\n  }\r\n  searchInputListener = (e) => {\r\n    const content = e.target.value.toLowerCase();\r\n    const filtered = this.state.staff.filter((user) => {\r\n      const arr = user.fname.toLowerCase().split(content);\r\n      if (arr.length > 1) return user;\r\n      return null;\r\n    });\r\n    this.setState({ filtered });\r\n  };\r\n\r\n  deleteAStaff = async (user) => {\r\n    let { staff } = this.state;\r\n    let res = await deleteStaff(this.props.token, user.fname);\r\n    if (res && res.success) {\r\n      let filtered = staff.filter((x) => x.fname !== user.fname);\r\n      this.setState({ staff: filtered });\r\n    }\r\n  };\r\n\r\n  deleteAdmin = async (user) => {\r\n    let { admins } = this.state;\r\n    let res = await deleteUser(this.props.token, user.username);\r\n    if (res && res.success) {\r\n      let filtered = admins.filter((x) => x.fname !== user.fname);\r\n      this.setState({ admins: filtered })\r\n      \r\n    }\r\n  };\r\n\r\n  spitOtherUsers = () => {\r\n    const { admins } = this.state;\r\n    return (\r\n      <Paper elevation={3} id=\"surface\">\r\n        <div id=\"booking-table-header\">\r\n          <h3>Other Admins</h3>\r\n          <div onClick={this.props.saveDashboardData}>\r\n            <RefreshIcon style={{ color: \"grey\" }} />\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"space-me\" id=\"interactions-container\">\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => this.setState({ addAccountant:true, showAddStaff: true })}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Name</th>\r\n              <th>Username</th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n              <th>Type</th>\r\n              <th>Nationality</th>\r\n              <th>Address</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {admins && admins.length\r\n              ? admins.map((admin, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <th>{index + 1}</th>\r\n                      <th>{admin.fname + \"  \" + admin.lname}</th>\r\n                      <th>{admin.username}</th>\r\n                      <th>{admin.phone}</th>\r\n                      <th>{admin.email}</th>\r\n                      <th>{admin.is_accountant ? \"Accountant\" : \"Admin\"}</th>\r\n                      <th>{admin.nationality}</th>\r\n                      <th>{admin.homeAddress}</th>\r\n                      <td style={{ display: \"flex\" }}>\r\n                        <div\r\n                          id=\"action\"\r\n                          className=\"center-me delete\"\r\n                          onClick={()=>this.deleteAdmin(admin)}\r\n                        >\r\n                          <DeleteIcon id=\"action-icon\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  spitStaff = () => {\r\n    const { staff, filtered } = this.state;\r\n    return (\r\n      <Paper elevation={3} id=\"surface\">\r\n        <div id=\"booking-table-header\">\r\n          <h3>All Staff</h3>\r\n          <div onClick={this.props.saveDashboardData}>\r\n            <RefreshIcon style={{ color: \"grey\" }} />\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"space-me\" id=\"interactions-container\">\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => this.setState({  addAccountant:false,showAddStaff: true })}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </div>\r\n          <div className=\"side-ways\">\r\n            <span id=\"search-name\">Search:</span>\r\n            <FormControl\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              onChange={(e) => {\r\n                this.setState({ query: e.target.value });\r\n                this.searchInputListener(e);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Name</th>\r\n              <th>Phone</th>\r\n              <th>Email</th>\r\n              <th>ID Number</th>\r\n              <th>Job</th>\r\n              <th>Address</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filtered.length || this.state.query\r\n              ? filtered.map((user, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{user ? user.fname + \" \" + user.lname : \"\"}</td>\r\n                      <td>{user ? user.phone : \"\"}</td>\r\n                      <td>{user ? user.email : \"\"}</td>\r\n                      <td>{user ? user.idNumber : \"\"}</td>\r\n                      <td>{user ? user.job : \"\"}</td>\r\n                      <td>{user ? user.homeAddress : \"\"}</td>\r\n                      <td style={{ display: \"flex\" }}>\r\n                        <div\r\n                          id=\"action\"\r\n                          className=\"center-me delete\"\r\n                          onClick={() => this.deleteAStaff(user)}\r\n                        >\r\n                          <DeleteIcon id=\"action-icon\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : staff && staff.length\r\n              ? staff.map((user, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{user ? user.fname + \" \" + user.lname : \"\"}</td>\r\n                      <td>{user ? user.phone : \"\"}</td>\r\n                      <td>{user ? user.email : \"\"}</td>\r\n                      <td>{user ? user.idNumber : \"\"}</td>\r\n                      <td>{user ? user.job : \"\"}</td>\r\n                      <td>{user ? user.homeAddress : \"\"}</td>\r\n                      <td style={{ display: \"flex\" }}>\r\n                        <div\r\n                          id=\"action\"\r\n                          className=\"center-me delete\"\r\n                          onClick={() => this.deleteAStaff(user)}\r\n                        >\r\n                          <DeleteIcon id=\"action-icon\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n        {this.state.showAddStaff ? (\r\n          <StaffForm\r\n            show={this.state.showAddStaff}\r\n            handleShow={this.handleShow}\r\n            handleShow={this.handleShow}\r\n            onHide={() => this.setState({ showAddStaff: false })}\r\n            addAccountant={this.state.addAccountant}\r\n          />\r\n        ) : null}\r\n      </Paper>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.spitOtherUsers()}\r\n        {this.spitStaff()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    staff: state.dashboard.staff,\r\n    admins: state.dashboard.admins,\r\n    token: state.user.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      saveDashboardData: getDashboardDataAction,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Staff);\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\Rooms.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\index.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\Reservations.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\HelperFunctions.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\firebase\\index.js",[],["143","144"],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\rooms\\RoomForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\services\\ServiceForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\staff\\StaffForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\functions\\IneractionFunctions.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\reducers\\Reducers.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\machinery\\actions\\index.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Messaging\\Messaging.js",["145","146","147"],"import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport {\r\n  Table,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button as BTN,\r\n} from \"react-bootstrap\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  deleteResponse,\r\n  deleteTable,\r\n  sendGenericMessage,\r\n} from \"../../machinery/functions/IneractionFunctions\";\r\nimport ReplyIcon from \"@material-ui/icons/Reply\";\r\nimport { getDashboardDataAction } from \"../../machinery/actions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport ConfirmationModal from \"../../reusables/ConfirmationModal\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"../../css/Home.css\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nclass Messaging extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      queries: [],\r\n      confirm: false,\r\n      table: \"\",\r\n      audience: \"\",\r\n      message: \"\",\r\n      type: \"\",\r\n      error: \"\",\r\n      sending: false,\r\n      subject: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps({ dashboard }) {\r\n    this.setState({ queries: dashboard.queries });\r\n  }\r\n  componentDidMount() {\r\n    let queries = this.props.dashboard.queries;\r\n    this.setState({ queries: queries });\r\n  }\r\n\r\n  deleteAQueries = async (query) => {\r\n    const { queries } = this.state;\r\n\r\n    let res = await deleteResponse(this.props.token, query.id);\r\n    if (res && res.success) {\r\n      let filtered = queries.filter((x) => x.id !== query.id);\r\n      this.setState({ queries: filtered });\r\n    }\r\n  };\r\n  deleteAll = async () => {\r\n    let del = await deleteTable(this.props.token, \"QUERIES\");\r\n    if (del) {\r\n      this.props.saveDashboardData();\r\n      this.setState({ confirm: false });\r\n    }\r\n  };\r\n\r\n  sendBulkMessage = async (e) => {\r\n    const { audience, message, type } = this.state;\r\n    const { staff, guests, bills } = this.props.dashboard;\r\n    let receivers = [];\r\n    e.preventDefault();\r\n    if (!audience || !type || !message)\r\n      return this.setState({\r\n        error: \"please make sure you populate the fields\",\r\n      });\r\n\r\n    this.setState({ error: \"\", sending: true });\r\n\r\n    if (audience === \"ALL_GUESTS\") {\r\n      if (guests && guests.length) {\r\n        guests.map((guest) => {\r\n          if (type === \"EMAIL\") {\r\n            receivers.push(guest.email);\r\n          } else {\r\n            receivers.push(guest.phone);\r\n          }\r\n        });\r\n      } else return [];\r\n    } else if (audience === \"ALL_STAFF\") {\r\n      if (staff && staff.length) {\r\n        staff.map((ST) => {\r\n          if (type === \"EMAIL\") {\r\n            receivers.push(ST.email);\r\n          } else {\r\n            receivers.push(ST.phone);\r\n          }\r\n        });\r\n      } else return [];\r\n    } else {\r\n      if (bills && bills.length) {\r\n        bills.map((bill) => {\r\n          if (!bill.isPaid) {\r\n            if (type === \"EMAIL\") {\r\n              receivers.push(bill.reservation.guest.email);\r\n            } else {\r\n              receivers.push(bill.reservation.guest.phone);\r\n            }\r\n          }\r\n        });\r\n      } else return [];\r\n    }\r\n\r\n    let res = await sendGenericMessage(this.props.token, {\r\n      messageType: this.state.type,\r\n      receiver: receivers,\r\n      message: this.state.message,\r\n      subject: this.state.subject,\r\n    });\r\n    if (res && res.success) {\r\n      this.setState({\r\n        sending: false,\r\n        message: \"\",\r\n        type: \"\",\r\n        subject: \"\",\r\n        audience: \"\",\r\n      });\r\n    } else {\r\n      this.setState({ sending: false, error: \"unable to send Message\" });\r\n    }\r\n  };\r\n\r\n  spitBulkMessaging = () => {\r\n    const { audience, message, type, error, subject } = this.state;\r\n    return (\r\n      <Paper elevation={3} id=\"bulk-messeging-container\">\r\n        <div id=\"booking-table-header\">\r\n          <h3>BULK MESSAGING</h3> \r\n        </div>\r\n        <Divider />\r\n        <Container id=\"form-container\">\r\n          {error ? <p id=\"error-text\">{error}</p> : null}\r\n          <Row>\r\n            <Col md={6} sm={12}>\r\n              {\" \"}\r\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Message Type</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={type}\r\n                  onChange={(e) => this.setState({ type: e.target.value })}\r\n                >\r\n                  <option>Select the type of message</option>\r\n                  <option value=\"EMAIL\">email</option>\r\n                  <option value=\"SMS\">Sms</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={6} sm={12}>\r\n              {\" \"}\r\n              <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Form.Label>Audience</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(e) => this.setState({ audience: e.target.value })}\r\n                  value={audience}\r\n                >\r\n                  <option>Select your audience</option>\r\n                  <option value=\"ALL_GUESTS\">All Guests</option>\r\n                  <option value=\"ALL_STAFF\">All Staff</option>\r\n                  <option value=\"PENDING_PAYMENT\">\r\n                    Guests with pending payment\r\n                  </option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {this.state.type === \"EMAIL\" ? (\r\n            <Form.Group>\r\n              <Form.Label>Subject</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={subject}\r\n                onChange={(e) => this.setState({ subject: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n          ) : null}\r\n          <Form.Group>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              id=\"contact-form-field\"\r\n              onChange={(e) => this.setState({ message: e.target.value })}\r\n              value={message}\r\n              placeholder=\"Enter Your Message......\"\r\n              rows={5}\r\n            />\r\n          </Form.Group>\r\n          {this.state.sending ? <LinearProgress color=\"secondary\" /> : null}\r\n          <BTN\r\n            type=\"submit\"\r\n            className=\"button bulk-message-btn\"\r\n            onClick={this.sendBulkMessage}\r\n          >\r\n            Send\r\n          </BTN>\r\n        </Container>\r\n      </Paper>\r\n    );\r\n  };\r\n  spitQuries = () => {\r\n    const { queries } = this.state;\r\n    return (\r\n      <Paper elevation={3} id=\"surface\">\r\n        <div id=\"booking-table-header\">\r\n          <h3>Response From Users</h3>\r\n          <div onClick={this.props.saveDashboardData}>\r\n            <RefreshIcon style={{ color: \"grey\" }} />\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"space-me\" id=\"interactions-container\">\r\n          <div>\r\n            <Button\r\n              style={{ marginLeft: \"1.5rem\" }}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => this.setState({ confirm: true })}\r\n            >\r\n              DELETE TABLE\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Type</th>\r\n              <th>Message</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {queries && queries.length\r\n              ? queries.map((query, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{query.name}</td>\r\n                      <td>{query.email}</td>\r\n                      <td>{query.type}</td>\r\n                      <td>{query.message}</td>\r\n                      <td style={{ display: \"flex\" }}>\r\n                        <div\r\n                          id=\"action\"\r\n                          className=\"center-me edit\"\r\n                          onClick={() => alert(\"Do you want To reply ? Well I am not configured!!!!!\")}\r\n                        >\r\n                          <ReplyIcon id=\"action-icon\" />\r\n                        </div>\r\n                        <div\r\n                          id=\"action\"\r\n                          className=\"center-me delete\"\r\n                          onClick={() => this.deleteAQueries(query)}\r\n                        >\r\n                          <DeleteIcon id=\"action-icon\" />\r\n                        </div>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </Table>\r\n      </Paper>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.spitBulkMessaging()}\r\n        {this.spitQuries()}\r\n        {this.state.confirm ? (\r\n          <ConfirmationModal\r\n            show={this.state.confirm}\r\n            delete={() => this.deleteAll()}\r\n            toEdit={this.state.toEdit}\r\n            handleShow={this.handleShow}\r\n            onHide={() => this.setState({ confirm: false })}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dashboard: state.dashboard,\r\n    token: state.user.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      saveDashboardData: getDashboardDataAction,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Messaging);\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\MessagingForm.js",["148","149"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendGenericMessage } from \"../machinery/functions/IneractionFunctions\";\r\n\r\nclass MessagingForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: false,\r\n      message: \"\",\r\n      error: \"\",\r\n      subject: \"\",\r\n      receiver: \"\",\r\n      error: \"\",\r\n      type:\"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const receiver = this.props.receiver;\r\n    this.setState({ receiver: receiver, type:this.props.type });\r\n  }\r\n  componentWillReceiveProps({ receiver, type }) {\r\n    this.setState({ receiver: receiver, type:type });\r\n  }\r\n\r\n  sendMessage = async(e) => {\r\n    const { error, message, subject, receiver } = this.state;\r\n    if (!message) return this.setState({ error: \"please type in a message\" });\r\n    this.setState({ error: \"\", loading: true });\r\n\r\n    let res = await sendGenericMessage(this.props.token, {\r\n        messageType:this.state.type,\r\n        receiver:[receiver],\r\n        message:message,\r\n        subject:subject\r\n    })\r\n\r\n    if(res && res.success){\r\n        this.setState({loading:false})\r\n        this.props.handleShow()\r\n    }\r\n    else{\r\n        this.setState({loading:false, error:\"unable to send Message\"})\r\n    }\r\n  };\r\n  render() {\r\n    const { error, message, subject, receiver } = this.state;\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            Messaging Form\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form id=\"form\">\r\n            {error ? <p id=\"error-text\">{error}</p> : null}\r\n\r\n            <Form.Group>\r\n              <Form.Label>Reciepient</Form.Label>\r\n              <Form.Control type=\"text\" value={receiver} disabled />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Subject</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                value={subject}\r\n                onChange={(e) => this.setState({ subject: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                id=\"contact-form-field\"\r\n                value={message}\r\n                onChange={(e) => this.setState({ message: e.target.value })}\r\n                placeholder=\"Enter Your Message......\"\r\n                rows={5}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          {this.state.loading ? <LinearProgress color=\"secondary\" /> : null}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            className=\"button\"\r\n            variant=\"primary\"\r\n            onClick={this.sendMessage}\r\n          >\r\n            send Message\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.user.token,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(MessagingForm);\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\ConfirmationModal.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\news\\News.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\news\\NewsForm.js",["150","151"],"import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Row, Col } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { addNewNews,saveEditANews } from \"../../machinery/functions/IneractionFunctions\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { getDashboardDataAction } from \"../../machinery/actions\";\r\nimport { storage } from \"../../machinery/firebase\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\n\r\nclass NewsForm extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\",\r\n      image: \"\",\r\n      loading: false,\r\n      editMode: false,\r\n      id: \"\",\r\n      error:\"\"\r\n    };\r\n  }\r\n  uploadImage = async (image) => {\r\n    const uploadTask = await storage.ref(`news/${image.name}`).put(image);\r\n    return await uploadTask.ref.getDownloadURL();\r\n  };\r\n\r\n  saveRoom = async () => {\r\n    const { title, content, image } = this.state;\r\n    if (!image) return this.setState({error:\"please provide image\"});\r\n    this.setState({error:\"\",loading: true})\r\n    let url = await this.uploadImage(image);\r\n    if (url) {\r\n      let res = await addNewNews(this.props.token, {\r\n        title: title,\r\n        content: content,\r\n        image: url,\r\n      });\r\n      if (res && res.success) {\r\n        this.setState({ loading: false });\r\n        this.props.handleShow();\r\n        this.props.saveDashboardData();\r\n      }\r\n      else{\r\n        this.setState({ loading: false, error:\"Unable to perform this request. Please check the form\" });\r\n      }\r\n    }\r\n  };\r\n  componentWillReceiveProps({ editMode, toEdit }) {\r\n    console.log(toEdit, editMode);\r\n    this.setState({\r\n      editMode: editMode,\r\n      id: toEdit.id,\r\n      title: toEdit.title,\r\n      content: toEdit.content,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { toEdit, editMode } = this.props;\r\n    console.log(toEdit, editMode);\r\n    if (editMode) {\r\n      this.setState({\r\n        id: toEdit.id,\r\n        title: toEdit.title,\r\n        content: toEdit.content,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        title: \"\",\r\n        content: \"\",\r\n        image: \"\",\r\n        id: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  saveRoomEdit = async () => {\r\n    this.setState({ loading: true });\r\n    const { title, content, image } = this.state;\r\n    if (image) {\r\n      let url = await this.uploadImage(image);\r\n      if (url) {\r\n        let res = await saveEditANews(\r\n          this.props.token,\r\n          {\r\n            title: title,\r\n            content: content,\r\n            image: url,\r\n          },\r\n          this.state.id\r\n        );\r\n        if (res.success) {\r\n          this.setState({ loading: false });\r\n          this.props.handleShow();\r\n          this.props.saveDashboardData();\r\n        }\r\n      } \r\n    }\r\n    else {\r\n      let res = await saveEditANews(\r\n        this.props.token,\r\n        {\r\n            title: title,\r\n            content: content,\r\n        },\r\n        this.state.id\r\n      );\r\n      if (res && res.success) {\r\n        this.setState({ loading: false });\r\n        this.props.handleShow();\r\n        this.props.saveDashboardData();\r\n      }\r\n      else{\r\n        this.setState({ loading: false, error:\"Unable to perform this request. Please check the form\" });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n      const {error} = this.state\r\n    return (\r\n      <Modal\r\n        {...this.props}\r\n        size=\"md\"\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            News Form\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n          {error ? <p id=\"error-text\">{error}</p> : null}\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Title</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter news title\"\r\n                value={this.state.title}\r\n                onChange={(e) => this.setState({ title: e.target.value })}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                autoFocus\r\n                type=\"file\"\r\n                onChange={(e) => this.setState({ image: e.target.files[0] })}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    id=\"contact-form-field\"\r\n                    value={this.state.content}\r\n                    onChange={(e) => this.setState({ content: e.target.value })}\r\n                    placeholder=\"Enter news conent......\"\r\n                    rows={5}\r\n                  />\r\n                </Form.Group>\r\n          </Form>\r\n          <div>\r\n            {this.state.loading ? <LinearProgress color=\"secondary\" /> : null}\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {!this.props.toEdit.title ? (\r\n            <Button\r\n              className=\"button\"\r\n              variant=\"primary\"\r\n              onClick={this.saveRoom}\r\n            >\r\n              SAVE\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              className=\"button\"\r\n              variant=\"primary\"\r\n              onClick={this.saveRoomEdit}\r\n            >\r\n              SAVE EDIT\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    token: state.user.token,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      saveDashboardData: getDashboardDataAction,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withRouter(NewsForm));\r\n","C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\finances\\Finances.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\reservation\\ReservationForm.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\reusables\\Notification.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Accounting\\Dashboard.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Accounting\\charts\\NumberOfMontlyBooking.js",[],"C:\\Users\\tachyon\\Documents\\Webie\\luxcom-admin\\luxcom-admin\\src\\pages\\Accounting\\charts\\PaidVsUnpaid.js",[],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":234,"column":13,"nodeType":"158","endLine":234,"endColumn":41},{"ruleId":"152","replacedBy":"159"},{"ruleId":"154","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":82,"column":28,"nodeType":"163","messageId":"164","endLine":82,"endColumn":30},{"ruleId":"161","severity":1,"message":"162","line":92,"column":24,"nodeType":"163","messageId":"164","endLine":92,"endColumn":26},{"ruleId":"161","severity":1,"message":"162","line":102,"column":26,"nodeType":"163","messageId":"164","endLine":102,"endColumn":28},{"ruleId":"165","severity":1,"message":"166","line":16,"column":7,"nodeType":"167","messageId":"168","endLine":16,"endColumn":12},{"ruleId":"169","severity":1,"message":"170","line":30,"column":13,"nodeType":"171","messageId":"172","endLine":30,"endColumn":18},{"ruleId":"169","severity":1,"message":"173","line":2,"column":31,"nodeType":"171","messageId":"172","endLine":2,"endColumn":34},{"ruleId":"169","severity":1,"message":"174","line":2,"column":36,"nodeType":"171","messageId":"172","endLine":2,"endColumn":39},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["175"],["176"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-dupe-keys","Duplicate key 'error'.","ObjectExpression","unexpected","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]